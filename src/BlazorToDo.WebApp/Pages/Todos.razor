@page "/todos"
@inject BlazorToDo.WebApp.Services.IToDoUpdateService _ToDoUpdateService

<h1>Public Todos</h1>

@foreach (ToDoItem item in Items)
{
    <ToDo @key="@item.EditId" Item="item" OnItemCreated="OnItemCreated"></ToDo>
}

@functions {
    private List<ToDoItem> Items = new List<ToDoItem>()
    {
        new ToDoItem()
    };    

    protected override void OnInitialized()
    {
        _ToDoUpdateService.OnUpdate += (sender, args) => {   
            var item = Items.FirstOrDefault(f => f == args.Item);
            if(item == null)
                Items.Add(args.Item);
            // Notify the "UI" to refresh    
            this.InvokeAsync(() => this.StateHasChanged());
        };

        _ToDoUpdateService.OnRemove += (sender, args) => {
            var item = Items.First(f => f == args.Item);
            Items.Remove(item);
            // Notify the "UI" to refresh
            this.InvokeAsync(() => this.StateHasChanged());
        };
    }

    private void OnItemCreated(ToDoItemEventArgs args)
    {
        Items.Add(new ToDoItem());
    }
}